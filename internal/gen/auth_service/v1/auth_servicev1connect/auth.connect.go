// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: auth_service/v1/auth.proto

package auth_servicev1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/saurabh-sde/otp-authentication-go/internal/gen/auth_service/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// AuthServiceName is the fully-qualified name of the AuthService service.
	AuthServiceName = "auth_service.v1.AuthService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// AuthServiceSignupWithPhoneNumberProcedure is the fully-qualified name of the AuthService's
	// SignupWithPhoneNumber RPC.
	AuthServiceSignupWithPhoneNumberProcedure = "/auth_service.v1.AuthService/SignupWithPhoneNumber"
	// AuthServiceVerifyPhoneNumberProcedure is the fully-qualified name of the AuthService's
	// VerifyPhoneNumber RPC.
	AuthServiceVerifyPhoneNumberProcedure = "/auth_service.v1.AuthService/VerifyPhoneNumber"
	// AuthServiceLoginWithPhoneNumberProcedure is the fully-qualified name of the AuthService's
	// LoginWithPhoneNumber RPC.
	AuthServiceLoginWithPhoneNumberProcedure = "/auth_service.v1.AuthService/LoginWithPhoneNumber"
	// AuthServiceValidatePhoneNumberLoginProcedure is the fully-qualified name of the AuthService's
	// ValidatePhoneNumberLogin RPC.
	AuthServiceValidatePhoneNumberLoginProcedure = "/auth_service.v1.AuthService/ValidatePhoneNumberLogin"
	// AuthServiceGetProfileProcedure is the fully-qualified name of the AuthService's GetProfile RPC.
	AuthServiceGetProfileProcedure = "/auth_service.v1.AuthService/GetProfile"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	authServiceServiceDescriptor                        = v1.File_auth_service_v1_auth_proto.Services().ByName("AuthService")
	authServiceSignupWithPhoneNumberMethodDescriptor    = authServiceServiceDescriptor.Methods().ByName("SignupWithPhoneNumber")
	authServiceVerifyPhoneNumberMethodDescriptor        = authServiceServiceDescriptor.Methods().ByName("VerifyPhoneNumber")
	authServiceLoginWithPhoneNumberMethodDescriptor     = authServiceServiceDescriptor.Methods().ByName("LoginWithPhoneNumber")
	authServiceValidatePhoneNumberLoginMethodDescriptor = authServiceServiceDescriptor.Methods().ByName("ValidatePhoneNumberLogin")
	authServiceGetProfileMethodDescriptor               = authServiceServiceDescriptor.Methods().ByName("GetProfile")
)

// AuthServiceClient is a client for the auth_service.v1.AuthService service.
type AuthServiceClient interface {
	SignupWithPhoneNumber(context.Context, *connect.Request[v1.SignupWithPhoneNumberRequest]) (*connect.Response[v1.SignupWithPhoneNumberResponse], error)
	VerifyPhoneNumber(context.Context, *connect.Request[v1.VerifyPhoneNumberRequest]) (*connect.Response[v1.VerifyPhoneNumberResponse], error)
	LoginWithPhoneNumber(context.Context, *connect.Request[v1.LoginWithPhoneNumberRequest]) (*connect.Response[v1.LoginWithPhoneNumberResponse], error)
	ValidatePhoneNumberLogin(context.Context, *connect.Request[v1.ValidatePhoneNumberLoginRequest]) (*connect.Response[v1.ValidatePhoneNumberLoginResponse], error)
	GetProfile(context.Context, *connect.Request[v1.GetProfileRequest]) (*connect.Response[v1.GetProfileResponse], error)
}

// NewAuthServiceClient constructs a client for the auth_service.v1.AuthService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewAuthServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) AuthServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &authServiceClient{
		signupWithPhoneNumber: connect.NewClient[v1.SignupWithPhoneNumberRequest, v1.SignupWithPhoneNumberResponse](
			httpClient,
			baseURL+AuthServiceSignupWithPhoneNumberProcedure,
			connect.WithSchema(authServiceSignupWithPhoneNumberMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		verifyPhoneNumber: connect.NewClient[v1.VerifyPhoneNumberRequest, v1.VerifyPhoneNumberResponse](
			httpClient,
			baseURL+AuthServiceVerifyPhoneNumberProcedure,
			connect.WithSchema(authServiceVerifyPhoneNumberMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		loginWithPhoneNumber: connect.NewClient[v1.LoginWithPhoneNumberRequest, v1.LoginWithPhoneNumberResponse](
			httpClient,
			baseURL+AuthServiceLoginWithPhoneNumberProcedure,
			connect.WithSchema(authServiceLoginWithPhoneNumberMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		validatePhoneNumberLogin: connect.NewClient[v1.ValidatePhoneNumberLoginRequest, v1.ValidatePhoneNumberLoginResponse](
			httpClient,
			baseURL+AuthServiceValidatePhoneNumberLoginProcedure,
			connect.WithSchema(authServiceValidatePhoneNumberLoginMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getProfile: connect.NewClient[v1.GetProfileRequest, v1.GetProfileResponse](
			httpClient,
			baseURL+AuthServiceGetProfileProcedure,
			connect.WithSchema(authServiceGetProfileMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// authServiceClient implements AuthServiceClient.
type authServiceClient struct {
	signupWithPhoneNumber    *connect.Client[v1.SignupWithPhoneNumberRequest, v1.SignupWithPhoneNumberResponse]
	verifyPhoneNumber        *connect.Client[v1.VerifyPhoneNumberRequest, v1.VerifyPhoneNumberResponse]
	loginWithPhoneNumber     *connect.Client[v1.LoginWithPhoneNumberRequest, v1.LoginWithPhoneNumberResponse]
	validatePhoneNumberLogin *connect.Client[v1.ValidatePhoneNumberLoginRequest, v1.ValidatePhoneNumberLoginResponse]
	getProfile               *connect.Client[v1.GetProfileRequest, v1.GetProfileResponse]
}

// SignupWithPhoneNumber calls auth_service.v1.AuthService.SignupWithPhoneNumber.
func (c *authServiceClient) SignupWithPhoneNumber(ctx context.Context, req *connect.Request[v1.SignupWithPhoneNumberRequest]) (*connect.Response[v1.SignupWithPhoneNumberResponse], error) {
	return c.signupWithPhoneNumber.CallUnary(ctx, req)
}

// VerifyPhoneNumber calls auth_service.v1.AuthService.VerifyPhoneNumber.
func (c *authServiceClient) VerifyPhoneNumber(ctx context.Context, req *connect.Request[v1.VerifyPhoneNumberRequest]) (*connect.Response[v1.VerifyPhoneNumberResponse], error) {
	return c.verifyPhoneNumber.CallUnary(ctx, req)
}

// LoginWithPhoneNumber calls auth_service.v1.AuthService.LoginWithPhoneNumber.
func (c *authServiceClient) LoginWithPhoneNumber(ctx context.Context, req *connect.Request[v1.LoginWithPhoneNumberRequest]) (*connect.Response[v1.LoginWithPhoneNumberResponse], error) {
	return c.loginWithPhoneNumber.CallUnary(ctx, req)
}

// ValidatePhoneNumberLogin calls auth_service.v1.AuthService.ValidatePhoneNumberLogin.
func (c *authServiceClient) ValidatePhoneNumberLogin(ctx context.Context, req *connect.Request[v1.ValidatePhoneNumberLoginRequest]) (*connect.Response[v1.ValidatePhoneNumberLoginResponse], error) {
	return c.validatePhoneNumberLogin.CallUnary(ctx, req)
}

// GetProfile calls auth_service.v1.AuthService.GetProfile.
func (c *authServiceClient) GetProfile(ctx context.Context, req *connect.Request[v1.GetProfileRequest]) (*connect.Response[v1.GetProfileResponse], error) {
	return c.getProfile.CallUnary(ctx, req)
}

// AuthServiceHandler is an implementation of the auth_service.v1.AuthService service.
type AuthServiceHandler interface {
	SignupWithPhoneNumber(context.Context, *connect.Request[v1.SignupWithPhoneNumberRequest]) (*connect.Response[v1.SignupWithPhoneNumberResponse], error)
	VerifyPhoneNumber(context.Context, *connect.Request[v1.VerifyPhoneNumberRequest]) (*connect.Response[v1.VerifyPhoneNumberResponse], error)
	LoginWithPhoneNumber(context.Context, *connect.Request[v1.LoginWithPhoneNumberRequest]) (*connect.Response[v1.LoginWithPhoneNumberResponse], error)
	ValidatePhoneNumberLogin(context.Context, *connect.Request[v1.ValidatePhoneNumberLoginRequest]) (*connect.Response[v1.ValidatePhoneNumberLoginResponse], error)
	GetProfile(context.Context, *connect.Request[v1.GetProfileRequest]) (*connect.Response[v1.GetProfileResponse], error)
}

// NewAuthServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewAuthServiceHandler(svc AuthServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	authServiceSignupWithPhoneNumberHandler := connect.NewUnaryHandler(
		AuthServiceSignupWithPhoneNumberProcedure,
		svc.SignupWithPhoneNumber,
		connect.WithSchema(authServiceSignupWithPhoneNumberMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	authServiceVerifyPhoneNumberHandler := connect.NewUnaryHandler(
		AuthServiceVerifyPhoneNumberProcedure,
		svc.VerifyPhoneNumber,
		connect.WithSchema(authServiceVerifyPhoneNumberMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	authServiceLoginWithPhoneNumberHandler := connect.NewUnaryHandler(
		AuthServiceLoginWithPhoneNumberProcedure,
		svc.LoginWithPhoneNumber,
		connect.WithSchema(authServiceLoginWithPhoneNumberMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	authServiceValidatePhoneNumberLoginHandler := connect.NewUnaryHandler(
		AuthServiceValidatePhoneNumberLoginProcedure,
		svc.ValidatePhoneNumberLogin,
		connect.WithSchema(authServiceValidatePhoneNumberLoginMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	authServiceGetProfileHandler := connect.NewUnaryHandler(
		AuthServiceGetProfileProcedure,
		svc.GetProfile,
		connect.WithSchema(authServiceGetProfileMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/auth_service.v1.AuthService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case AuthServiceSignupWithPhoneNumberProcedure:
			authServiceSignupWithPhoneNumberHandler.ServeHTTP(w, r)
		case AuthServiceVerifyPhoneNumberProcedure:
			authServiceVerifyPhoneNumberHandler.ServeHTTP(w, r)
		case AuthServiceLoginWithPhoneNumberProcedure:
			authServiceLoginWithPhoneNumberHandler.ServeHTTP(w, r)
		case AuthServiceValidatePhoneNumberLoginProcedure:
			authServiceValidatePhoneNumberLoginHandler.ServeHTTP(w, r)
		case AuthServiceGetProfileProcedure:
			authServiceGetProfileHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedAuthServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedAuthServiceHandler struct{}

func (UnimplementedAuthServiceHandler) SignupWithPhoneNumber(context.Context, *connect.Request[v1.SignupWithPhoneNumberRequest]) (*connect.Response[v1.SignupWithPhoneNumberResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("auth_service.v1.AuthService.SignupWithPhoneNumber is not implemented"))
}

func (UnimplementedAuthServiceHandler) VerifyPhoneNumber(context.Context, *connect.Request[v1.VerifyPhoneNumberRequest]) (*connect.Response[v1.VerifyPhoneNumberResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("auth_service.v1.AuthService.VerifyPhoneNumber is not implemented"))
}

func (UnimplementedAuthServiceHandler) LoginWithPhoneNumber(context.Context, *connect.Request[v1.LoginWithPhoneNumberRequest]) (*connect.Response[v1.LoginWithPhoneNumberResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("auth_service.v1.AuthService.LoginWithPhoneNumber is not implemented"))
}

func (UnimplementedAuthServiceHandler) ValidatePhoneNumberLogin(context.Context, *connect.Request[v1.ValidatePhoneNumberLoginRequest]) (*connect.Response[v1.ValidatePhoneNumberLoginResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("auth_service.v1.AuthService.ValidatePhoneNumberLogin is not implemented"))
}

func (UnimplementedAuthServiceHandler) GetProfile(context.Context, *connect.Request[v1.GetProfileRequest]) (*connect.Response[v1.GetProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("auth_service.v1.AuthService.GetProfile is not implemented"))
}
